#!/usr/bin/env perl
use strict;
use utf8;
use Time::HiRes qw /usleep/;
binmode(STDOUT, ":utf8");

sub get_soc_temp {
    my @fnames=(
          '/sys/devices/virtual/thermal/thermal_zone0/temp',
          '/sys/devices/platform/scpi/scpi:sensors/hwmon/hwmon0/temp1_input',
       );
    my $temp = "Unknown";
    for my $fname (@fnames) {
        if( -f $fname ) {
            open my $fh, "<", $fname;
            $temp = sprintf "%0.1fâ„ƒ", <$fh> / 1000;
            close $fh;
            return $temp;
        }
    }

    return $temp;
}

sub get_cpu_freq {
    my @fnames=</sys/devices/system/cpu/cpufreq/policy?/cpuinfo_cur_freq>;
    my $freq_str = "";
    for (my $i=0; $i < $#fnames + 1; $i++) {
        my $fname = $fnames[$i];
        open my $fh, "<", $fname;
	usleep(50000);
        my $freq = sprintf "%dMhz", <$fh> / 1000;
        close $fh;
	$freq_str .= $freq;
        if($i < $#fnames) {
            $freq_str .= " & ";
        } 
    }

    if($#fnames > 0) {
	$freq_str = "(" . $freq_str . ")";
    }

    return $freq_str;
}

sub get_arch_info {
    my @cpus = </sys/devices/system/cpu/cpu?>;
    my @cpu_groups;
    my %group_core_count;
    for my $cpu (@cpus) {
        open my $fh, "<", "${cpu}/uevent";
        while(<$fh>) {
            chomp;
            my($key,$value) = split /=/;
            if($key eq "OF_COMPATIBLE_0") {
		my($cortex, $a) = split /-/, (split /,/, $value)[1];
                my $core_type_name = ucfirst($cortex) . "-" . ucfirst($a);
                if(not exists $group_core_count{$core_type_name}) {
                     push @cpu_groups, $core_type_name;
                     $group_core_count{$core_type_name} = 0;
                }
                $group_core_count{$core_type_name} += 1;
            } 
        }
        close $fh;
    }

    my $arch_info = "AArch64 Processor : ";
    for (my $i = 0; $i < $#cpu_groups + 1; $i++) {
        my $group = $cpu_groups[$i];
	#if($i == 0) {
	#    $arch_info .= "";
	#}
        $arch_info .= $group;
        $arch_info .= " * ";
        $arch_info .= $group_core_count{$group};
        if($i < $#cpu_groups) {
            $arch_info .= " & ";
        } #else {
	#    $arch_info .= "";
	#}
    }

    return "$arch_info";
}

#####   main program #####
my $argc = scalar( @ARGV );
if($argc == 0) {
    print &get_cpu_freq, " / ", &get_soc_temp, "\n";
} elsif($ARGV[0] eq "-a") {
    print &get_arch_info, "\n";
} elsif($ARGV[0] eq "-t") {
    print &get_soc_temp, "\n";
} elsif($ARGV[0] eq "-f") {
    print &get_cpu_freq, "\n";
}
